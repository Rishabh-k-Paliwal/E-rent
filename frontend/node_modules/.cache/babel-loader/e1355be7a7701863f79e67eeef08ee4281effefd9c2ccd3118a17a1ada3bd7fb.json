{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\E_rent\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await authAPI.getMe();\n          setUser(response.data.data);\n        } catch (err) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const {\n        token,\n        ...userData\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Login failed';\n      setError(errorMsg);\n      return {\n        success: false,\n        error: errorMsg\n      };\n    }\n  };\n\n  // Register function\n  const register = async (name, email, password, role) => {\n    try {\n      setError(null);\n      const response = await authAPI.register({\n        name,\n        email,\n        password,\n        role\n      });\n      const {\n        token,\n        ...userData\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Registration failed';\n      setError(errorMsg);\n      return {\n        success: false,\n        error: errorMsg\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","checkAuth","token","localStorage","getItem","response","getMe","data","err","removeItem","login","email","password","userData","setItem","JSON","stringify","success","_err$response","_err$response$data","errorMsg","register","name","role","_err$response2","_err$response2$data","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/E_rent/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is logged in on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await authAPI.getMe();\r\n          setUser(response.data.data);\r\n        } catch (err) {\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const response = await authAPI.login({ email, password });\r\n      const { token, ...userData } = response.data.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || 'Login failed';\r\n      setError(errorMsg);\r\n      return { success: false, error: errorMsg };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (name, email, password, role) => {\r\n    try {\r\n      setError(null);\r\n      const response = await authAPI.register({ name, email, password, role });\r\n      const { token, ...userData } = response.data.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || 'Registration failed';\r\n      setError(errorMsg);\r\n      return { success: false, error: errorMsg };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}